//=============================================================================
//
// アイテムの処理 [Item.h]
// Author : 西潟栞那汰
//
//=============================================================================
#ifndef _ITEM_H_
#define _ITEM_H_

//=============================================================================
// インクルードファイル
//=============================================================================
#include "model.h"

//=============================================================================
// 前方宣言
//=============================================================================
class CShadow;

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// クラス宣言
//=============================================================================
class CBuild : public CModel
{
public:
	//アイテム効果
	typedef enum
	{
		BUILD_TYPE_0 = 0,//加速
		BUILD_TYPE_1,		//操作逆転
		BUILD_TYPE_MAX
	}BUILD_TYPE;

	CBuild();	// コンストラクタ
	~CBuild();	// デストラクタ

	static CBuild * Create(D3DXVECTOR3 pos, BUILD_TYPE type);	// 生成処理

	HRESULT Init(void);		// 初期化処理
	void Uninit(void);		// 終了処理
	void Update(void);		// 更新処理
	void Draw(void);		// 描画処理

	void MoveUpdate(void);	//移動更新
	void RotUpdate(void);	//角度更新

	void Save(void);
	static void Load(void);

	void SetBuildType(BUILD_TYPE BuildType) { m_BuildType = BuildType; }
	BUILD_TYPE GetItemState(void) { return m_BuildType; }
private:
	//=============================================================================
	// メンバ変数宣言
	//=============================================================================
	D3DXVECTOR3 m_size;		//大きさ
	D3DXVECTOR3 m_rot;		//角度
	D3DXVECTOR3 m_move;		//移動

	BUILD_TYPE m_BuildType;			//アイテムステータス
	CShadow *m_pShadow;			//影のポインタ

	bool m_bUp;				//上限判定
	bool m_bGet;			//取得フラグ

};

#endif // !_ITEM_H_
